<UserControl x:Class="PawaoxOCRWPF.GUI.Views.UC_OCR"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PawaoxOCRWPF.GUI.Views"
            xmlns:components="clr-namespace:PawaoxOCRWPF.GUI.Components"
            xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls" 
            xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
             >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CommandOnLoadedEvent}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding CommandOnUnloadedEvent}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="AUTO" />
            <RowDefinition Height="AUTO" />
            <RowDefinition Height="5" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="240" />
            <ColumnDefinition Width="1*" MinWidth="65" MaxWidth="150" />
            <ColumnDefinition Width="400" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
            <Image x:Name="imgRunning" Width="20" Height="20" Cursor="Hand" MouseEnter="imgRunning_MouseEnter" MouseLeave="imgRunning_MouseLeave" MouseLeftButtonUp="imgRunning_MouseLeftButtonUp">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RunningMode}" Value="1">
                                <DataTrigger.Setters>
                                    <Setter Property="Source" Value="/Resources/Images/circle_red.png" />
                                    <Setter Property="ToolTip" Value="Click to start the OCR Parser." />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RunningMode}" Value="2">
                                <DataTrigger.Setters>
                                    <Setter Property="Source" Value="/Resources/Images/circle_ylw.png" />
                                    <Setter Property="ToolTip" Value="The OCR Parser is starting up." />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RunningMode}" Value="3">
                                <DataTrigger.Setters>
                                    <Setter Property="Source" Value="/Resources/Images/circle_on.png" />
                                    <Setter Property="ToolTip" Value="Click to stop the OCR Parser" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" TextAlignment="Center" FontStyle="Italic">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RunningMode}" Value="1">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Offline" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RunningMode}" Value="2">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Starting..." />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RunningMode}" Value="3">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Online" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
        <TextBlock Grid.Row="1" Grid.Column="1" Text="Settings" Style="{StaticResource txtHeaderSupremeBlack}" />
        <TextBlock Grid.Row="1" Grid.Column="3" Text="Output" Style="{StaticResource txtHeaderSupremeBlack}" />

        <Grid Grid.Row="3" Grid.Column="1">
            <Grid.RowDefinitions>
                <!-- OCR Settings Header-->
                <RowDefinition Height="0" />
                <RowDefinition Height="AUTO" />
                
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                
                <!-- Parse Area Header -->
                <RowDefinition Height="0" />
                <RowDefinition Height="AUTO" />

                <!-- Top/Left Position -->
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="1" />
                <RowDefinition Height="AUTO" />

                <!-- Width/Height-->
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="1" />
                <RowDefinition Height="AUTO" />

                <!-- Opacity -->
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="1" />
                <RowDefinition Height="AUTO" />

                <!-- Ignore Input Checkbox -->
                <RowDefinition Height="11" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />

                <!-- Show Box -->
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />


                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="AUTO" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="AUTO" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="1" Text="OCR" Style="{StaticResource txtHeaderMediumBlack}" />

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Engine" Style="{StaticResource txtHeaderBlack}" />
            <ComboBox Grid.Row="5" Grid.Column="0" ItemsSource="{Binding EngineTypes}" SelectedItem="{Binding SelectedEngineType}" Width="110" HorizontalAlignment="Left" IsEnabled="{Binding IsRunning, Converter={StaticResource convInvertedBoolean}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CommandSelectedEngineTypeChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            
            <TextBlock Grid.Row="3" Grid.Column="2" Text="Language" Style="{StaticResource txtHeaderBlack}" />
            <ComboBox Grid.Row="5" Grid.Column="2" ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage}" Width="85" HorizontalAlignment="Left" IsEnabled="{Binding IsRunning, Converter={StaticResource convInvertedBoolean}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CommandSelectedLanguageChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <TextBlock Grid.Row="7" Grid.Column="0" Text="Capture Interval" Style="{StaticResource txtHeaderBlack}" ToolTip="This is the interval in miliseconds between screen captures. Minimum value is 200 (5 a second)" />
            <TextBox Grid.Row="9" Grid.Column="0" Text="{Binding CaptureInterval, UpdateSourceTrigger=PropertyChanged}" Width="85" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandCaptureIntervalChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>


            
            
            
            <TextBlock Grid.Row="14" Text="Parse Area" Style="{StaticResource txtHeaderMediumBlack}" />

            <TextBlock Grid.Row="16" Grid.Column="0" Text="Top Position" Style="{StaticResource txtHeaderBlack}" />
            <TextBox Grid.Row="18" Grid.Column="0" Text="{Binding ParseTopPosition, UpdateSourceTrigger=PropertyChanged}" Width="85" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandParseTopChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Grid.Row="16" Grid.Column="2" Text="Left Position" Style="{StaticResource txtHeaderBlack}" />
            <TextBox Grid.Row="18" Grid.Column="2" Text="{Binding ParseLeftPosition, UpdateSourceTrigger=PropertyChanged}" Width="85" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandParseLeftChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Grid.Row="20" Grid.Column="0" Text="Width" Style="{StaticResource txtHeaderBlack}" />
            <TextBox Grid.Row="22" Grid.Column="0" Text="{Binding ParseWidth, UpdateSourceTrigger=PropertyChanged}" Width="85" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandParseWidthChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Grid.Row="20" Grid.Column="2" Text="Height" Style="{StaticResource txtHeaderBlack}" />
            <TextBox Grid.Row="22" Grid.Column="2" Text="{Binding ParseHeight, UpdateSourceTrigger=PropertyChanged}" Width="85" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandParseHeightChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <TextBlock Grid.Row="24" Grid.Column="0" Text="Transparency" Style="{StaticResource txtHeaderBlack}" ToolTip="Transparency must be a value 0 - 100.   0 = Default, 100 = Invisible" />
            <TextBox Grid.Row="26" Grid.Column="0" Text="{Binding ParseTransparency, UpdateSourceTrigger=PropertyChanged}" Width="85" HorizontalAlignment="Left" ToolTip="Transparency must be a value 0 - 100.   0 = Default, 100 = Invisible">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandParseTransparencyChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            
            <CheckBox Grid.Row="28" Grid.Column="0" Grid.ColumnSpan="3" VerticalContentAlignment="Center" Content="Should area ignore input?">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding CommandToggleParseAreaIgnoreInput}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding CommandToggleParseAreaIgnoreInput}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <Border x:Name="brdBtnShowParseArea" Grid.Row="30" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="2" BorderBrush="#8040FF" CornerRadius="8" Background="#E5E5F5" Cursor="Hand" MouseLeftButtonUp="ToggleParseArea_Click" MouseEnter="ShowParseAreaButton_MouseEnter" MouseLeave="ShowParseAreaButton_MouseLeave" Visibility="{Binding IsShowingParseArea, Converter={StaticResource convInvertedBoolToVisibility}}" >
                <TextBlock Text="Show Area" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Yu Gothic UI" FontSize="13" Margin="4"  />
            </Border>

            <Border x:Name="brdBtnHideParseArea" Grid.Row="30" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="2" BorderBrush="#90dF9A" CornerRadius="8" Background="#DFFEF0" Cursor="Hand" MouseLeftButtonUp="ToggleParseArea_Click" MouseEnter="HideParseAreaButton_MouseEnter" MouseLeave="HideParseAreaButton_MouseLeave" Visibility="{Binding IsShowingParseArea, Converter={StaticResource convBoolToVisibility}}" >
                <TextBlock Text="Hide Area" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Yu Gothic UI" FontSize="13" Margin="4"  />
            </Border>
        </Grid>

        <StackPanel Grid.Row="3" Grid.Column="3" Orientation="Vertical">

            <CheckBox IsChecked="{Binding AutoCopyOutputToClipboard}" Content="Auto copy output to clipboard" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding CommandOnAutoClipboardOutputChanged}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding CommandOnAutoClipboardOutputChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </CheckBox>
            <Rectangle Height="5" Visibility="Hidden" />
            <CheckBox IsChecked="{Binding ShowRawOutput}" Content="Use the raw parse as Output?" >
            </CheckBox>

            <Rectangle Height="5" Visibility="Hidden" />
            <TextBox Text="{Binding Output, UpdateSourceTrigger=PropertyChanged}" FontSize="18" MinHeight="200" Style="{StaticResource textAreaReadonly}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding CommandOnOutputChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="{Binding OutputTimestamp}" HorizontalAlignment="Left"  />
        </StackPanel>
    </Grid>
</UserControl>
